<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:AnlaxRevitUpdate"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Объявляем конвертер -->
    <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />

    <Style x:Key="RoundedTextBox" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border x:Name="border" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="0" 
                                    CornerRadius="5">
                            <ScrollViewer Margin="0" 
                                              x:Name="PART_ContentHost" 
                                              HorizontalScrollBarVisibility="Hidden" 
                                              VerticalScrollBarVisibility="Hidden" 
                                              IsDeferredScrollingEnabled="False" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#8AA0B2"/>
        <!-- Цвет текста -->
        <Setter Property="FontFamily" Value="Open Sans"/>
        <!-- Шрифт -->
        <Setter Property="FontSize" Value="12"/>
        <!-- Размер шрифта -->
    </Style>
    <Style x:Key="RoundedTextBoxBlackBorder" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="5">
                            <ScrollViewer Margin="0" 
                                      x:Name="PART_ContentHost" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden" 
                                      IsDeferredScrollingEnabled="False" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#8AA0B2"/>
        <!-- Цвет текста -->
        <Setter Property="FontFamily" Value="Open Sans"/>
        <!-- Шрифт -->
        <Setter Property="FontSize" Value="12"/>
        <!-- Размер шрифта -->
        <Setter Property="BorderBrush" Value="#1C303B"/>
        <!-- Цвет границы -->
    </Style>


    <Style x:Key="HeaderTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="#FF8AA0B2"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>
    <Style x:Key="HeaderTextBlockBold" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#FF8AA0B2"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <Style x:Key="SecondHeaderTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FF00589C"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <Style x:Key="BaseText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Foreground" Value="#FF1C303B"/>
        <Setter Property="FontWeight" Value="Regular"/>
    </Style>
    <Style x:Key="ButtonBase" TargetType="Button">
        <Setter Property="Background" Value="#F2F2F2"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#8AA0B2"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#00589C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#003A66"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StartButton" TargetType="Button">
        <Setter Property="Background" Value="#B2C1CC"/>
        <Setter Property="Foreground" Value="#1C303B"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!-- Установка начального значения BorderThickness -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="White"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#B2C1CC"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#FF00589C" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#FF00589C" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#B2C1CC" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#B2C1CC" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Fill="Transparent" Stroke="Transparent" />
                        <Path Data="M 7,7 L 23,23 M 23,7 L 7,23" Stroke="#8AA0B2" StrokeThickness="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckRound" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border Width="21"
                                Height="21"
                                CornerRadius="5"
                                BorderBrush="#1C303B"
                                BorderThickness="1"
                                Background="Transparent">
                            <Grid>
                                <Path x:Name="checkMark"
                                      Stroke="Transparent"
                                      StrokeThickness="2"
                                      Data="M4,10 L9,16 L17,4"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center"
                                          Margin="5,0,0,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Stroke" Value="#00589C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioRound" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal">
                        <Border Width="21"
                            Height="21"
                            CornerRadius="15"
                            BorderBrush="#1C303B"
                            BorderThickness="1"
                            Background="Transparent">
                            <Grid>
                                <Ellipse x:Name="checkMark"
                                     Stroke="Transparent"
                                     Fill="Transparent"
                                     StrokeThickness="2"
                                     Width="12"
                                     Height="12"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center"
                                      Margin="5,0,0,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Fill" Value="#8AA0B2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomDataGridStyle" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="RowBackground" Value="White"/>
        <Setter Property="AlternatingRowBackground" Value="#F7F7F7"/>
        <Setter Property="BorderBrush" Value="#F2F2F2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#FFF2F2F2"/>
        <Setter Property="VerticalGridLinesBrush" Value="#FFF2F2F2"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <!-- Стиль для заголовков столбцов -->
    <Style x:Key="CustomColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#F7F7F7"/>
        <Setter Property="Foreground" Value="#1C303B"/>
        <Setter Property="FontFamily" Value="OpenSans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
    </Style>

    <!-- Стиль для строк -->
    <Style x:Key="CustomRowStyle" TargetType="DataGridRow">
        <Setter Property="FontFamily" Value="OpenSans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#1C303B"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <!-- Установка высоты строк -->
        <Setter Property="BorderBrush" Value="#F2F2F2"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
    </Style>

    <Style x:Key="CustomProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <Border x:Name="PART_Track" Height="16" Background="White" CornerRadius="5">
                            <Border x:Name="PART_Indicator" Background="#8AA0B2" CornerRadius="5" HorizontalAlignment="Left" Width="0"/>
                        </Border>
                        <TextBlock x:Name="CenterText"
                                       Text="СТАРТУЙТЕ НЕЖНО"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="Open Sans"
                                       FontSize="12"
                                       Foreground="#8AA0B2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0"
                       Height="1"
                       Width="12"
                       Fill="#8AA0B2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom"
                       Margin="0"/>
            <Path x:Name="Arrow"
                  Grid.Row="1"
                  Fill="#8AA0B2"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 6 6 L 12 0 Z"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ComboBox" x:Key="CustomComboBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border Name="Border"
                            Background="#F2F2F2"
                            BorderBrush="#000019"
                            BorderThickness="1"
                            CornerRadius="5"
                            Padding="1"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- ToggleButton for dropdown, but no icon shown -->
                                <ToggleButton Grid.Column="0"
                                          Name="ToggleButton"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          Background="Transparent"
                                          BorderBrush="Transparent">
                                    <ContentPresenter Name="ContentSite"
                                                  IsHitTestVisible="False"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  Margin="3,3,23,3"/>
                                </ToggleButton>

                                <!-- Popup for displaying items -->
                                <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                    <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                            Background="#F2F2F2"
                                            BorderBrush="#000019"
                                            BorderThickness="1"
                                            CornerRadius="5"/>
                                        <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#F4F4F4"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#D9D9D9"/>
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#000019"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#000019"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#1C303B"/>
    </Style>
    <Style x:Key="CustomScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Track x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineUpCommand" 
                                              Visibility="Collapsed"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Background="#B2C1CC" 
                                                    CornerRadius="3"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineDownCommand" 
                                              Visibility="Collapsed"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                CanHorizontallyScroll="False" 
                                CanVerticallyScroll="False" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                Content="{TemplateBinding Content}" 
                                Grid.RowSpan="2" 
                                Margin="{TemplateBinding Padding}" 
                                Grid.ColumnSpan="2"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" 
                   AutomationProperties.AutomationId="VerticalScrollBar" 
                   Cursor="Arrow" 
                   Grid.Column="1" 
                   Maximum="{TemplateBinding ScrollableHeight}" 
                   Minimum="0" 
                   Grid.Row="0" 
                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   ViewportSize="{TemplateBinding ViewportHeight}" 
                   Width="8"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" 
                   AutomationProperties.AutomationId="HorizontalScrollBar" 
                   Cursor="Arrow" Grid.Column="0" 
                   Maximum="{TemplateBinding ScrollableWidth}" 
                   Minimum="0" Orientation="Horizontal" 
                   Grid.Row="1" 
                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   ViewportSize="{TemplateBinding ViewportWidth}" 
                   Height="8"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" 
                           Height="{TemplateBinding Height}" 
                           Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="4" />
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Grid.ColumnSpan="2" Fill="#b2c1cc" />
                        <Rectangle Grid.Column="1" Grid.ColumnSpan="3" Fill="#b2c1cc" />
                        <Ellipse Grid.Column="3" Grid.ColumnSpan="2" Fill="#b2c1cc" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4" />
                            <RowDefinition Height="4" />
                            <RowDefinition />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="4" />
                        </Grid.RowDefinitions>
                        <Ellipse Grid.Row="0" Grid.RowSpan="2" Fill="#b2c1cc" />
                        <Rectangle Grid.Row="1" Grid.RowSpan="3" Fill="#b2c1cc" />
                        <Ellipse Grid.Row="3" Grid.RowSpan="2" Fill="#b2c1cc" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="White">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*"/>
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" 
                           IsDirectionReversed="true" 
                           IsEnabled="{TemplateBinding IsMouseOver}" 
                           Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" 
                                          Style="{StaticResource ScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" 
                                          Style="{StaticResource ScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource VerticalThumb}"  Width="8"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="MinHeight" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="White">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.00001*"/>
                                </Grid.ColumnDefinitions>
                                <Track x:Name="PART_Track" 
                                   Grid.Column="1" 
                                   IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" 
                                                  Style="{StaticResource ScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" 
                                                  Style="{StaticResource ScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource HorizontalThumb}" Height="8"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}" x:Key="StyleMarakom">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Template" Value="{StaticResource ScrollViewerControlTemplate}"/>
    </Style>

    <!-- TreeView Style -->
    <Style TargetType="TreeView" x:Key="CustomTreeView">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer Focusable="False" 
                                      Style="{StaticResource StyleMarakom}"
                                      Background="Transparent">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="StyleMarakomListBox">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                        <ScrollViewer Margin="0" Focusable="false">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>